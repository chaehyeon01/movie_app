{"version":3,"sources":["img/new.svg","img/up.svg","img/down.svg","MoviePoster.js","Movie.js","headerNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MoviePoster","state","moviePosterSrc","movieTitle","mvGrade","mvUserRating","date","mvInfoText","mvGenres","mvDirector","rankOldAndNew","rankInten","upIcon","getMoviePoster","a","title","props","grade","movieGrage","mvCode","axios","get","params","api_key","language","query","page","include_adult","moviesPoster","key","movieCd","obKey","moviesInfo","movieDri","data","movieInfoResult","movieInfo","directors","moveDirName","count","setState","results","poster_path","vote_average","overview","genres","this","upDownico","Number","className","src","alt","downIcon","upDwonIcon","newIcon","map","list","genreNm","slice","Component","Movie","console","log","HeaderNav","movieboxofficeDate","App","isLoding","movies","getMovies","item","mvDate","today","Date","yesterday","setDate","getDate","String","toISOString","substring","replace","targetDt","then","response","boxOfficeResult","dailyBoxOfficeList","showRange","catch","error","movieList","rank","openDt","movieNm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.384e90c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new.85888806.svg\";","module.exports = __webpack_public_path__ + \"static/media/up.cf4223ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.2f9676c9.svg\";","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport newIcon from \"./img/new.svg\";\r\nimport upIcon from \"./img/up.svg\";\r\nimport downIcon from \"./img/down.svg\";\r\n\r\n\r\nfunction upDwonIcon(rankInten) {\r\n    \r\n    if(Number(rankInten) > 0 ){\r\n        return(\r\n            <img className=\"updownIcon\" src={upIcon} alt=\"up\" />\r\n        );\r\n    }else if(Number(rankInten) < 0) {\r\n        return(\r\n            <img className=\"updownIcon\"  src={downIcon} alt=\"down\" />\r\n        );\r\n    }else {\r\n        return(\r\n          <span className=\"updownIconNone\" >-</span>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nclass MoviePoster extends Component {\r\n\r\n    \r\n\r\nstate = {\r\n    moviePosterSrc:'',\r\n    movieTitle:'',\r\n    mvGrade:'',\r\n    mvUserRating:'',\r\n    date:\"\",\r\n    mvInfoText:\"\",\r\n    mvGenres:[],\r\n    mvDirector: [],\r\n    rankOldAndNew:'',\r\n    rankInten:'',\r\n    upIcon:''\r\n}\r\n\r\ngetMoviePoster = async () => {\r\n\r\n    let title =this.props.movieTitle;\r\n    let grade=this.props.movieGrage;\r\n    let date=this.props.date;\r\n    let mvCode=this.props.mvCode;\r\n    let rankOldAndNew=this.props.rankOldAndNew;\r\n    let rankInten=this.props.rankInten;\r\n\r\n\r\n    let ID_KEY=\"194b4125636da8f986cadff856f51a17\";\r\n    const moviesPoster=await axios.get(\"https://api.themoviedb.org/3/search/movie\",{\r\n        params:{\r\n            api_key:ID_KEY,\r\n            language:\"ko\",\r\n            query:title,\r\n            page:\"1\",\r\n            include_adult:true\r\n        }\r\n    });  \r\n\r\n\r\n    const key=\"88e5912e2bfb079238ca7936c0322922\";\r\n    const moviesInfo=await axios.get(\"https://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieInfo.json\",{\r\n        params:{\r\n            key:key,\r\n            movieCd:mvCode\r\n        }\r\n    });  \r\n    \r\n   \r\n    let movieDri=moviesInfo.data.movieInfoResult.movieInfo.directors[0];\r\n    let moveDirName=[];\r\n    var count=0;\r\n    for (var obKey in movieDri) {\r\n        count++;\r\n        moveDirName[count]=movieDri[obKey];\r\n     }\r\n     \r\n\r\n    this.setState({\r\n        moviePosterSrc:moviesPoster.data.results[0].poster_path,\r\n        movieTitle:title,\r\n        mvGrade:grade,\r\n        mvUserRating:moviesPoster.data.results[0].vote_average,\r\n        date:date,\r\n        mvInfoText:moviesPoster.data.results[0].overview,\r\n        mvGenres:moviesInfo.data.movieInfoResult.movieInfo.genres,\r\n        mvDirector:moveDirName,\r\n        rankOldAndNew:rankOldAndNew,\r\n        rankInten:rankInten\r\n    });\r\n\r\n    \r\n\r\n}\r\n\r\ncomponentDidMount(){\r\n        this.getMoviePoster();\r\n}\r\n\r\n\r\n\r\nrender(){\r\n    \r\n    \r\n    const {moviePosterSrc,movieTitle,mvGrade,mvUserRating,date,mvInfoText,mvGenres,mvDirector,rankOldAndNew,rankInten} = this.state;\r\n\r\n    let upDownico=upDwonIcon(rankInten);\r\n\r\n\r\n    return(\r\n        <div className=\"movieData\">\r\n            <img className=\"mvPoster\" src={\"https://image.tmdb.org/t/p/original\"+moviePosterSrc} alt=\"영화\" />\r\n                <div className=\"movieInnerData\">\r\n                    { rankOldAndNew === \"NEW\" ? (\r\n                            <img className=\"newIcon\" src={newIcon} alt=\"new\" />\r\n                    ): ( <p className=\"OLD\"></p>) }\r\n                    <h4 className=\"moveiGrade\">{mvGrade}위</h4>{upDownico}<span>{rankInten}</span>\r\n                    <h5 className=\"movieGenre\"> {mvGenres.map(list => list.genreNm+\" \")}</h5>\r\n                    <h3 className=\"movieTitle\">{movieTitle}</h3>\r\n                    <h2 className=\"movieRating\">{mvUserRating}</h2>\r\n                    <h5 className=\"movieYear\"> 개봉 일자 | {date}</h5>\r\n                    <h5 className=\"movieDirector\">감 독 | { mvDirector.map(list => list) }</h5>\r\n                    <h5 className=\"movieText\"> {mvInfoText.slice(0,150)}...</h5>\r\n                    \r\n                 </div>   \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default MoviePoster;","import React from 'react';\r\nimport MoviesPoster from \"./MoviePoster\";\r\n\r\n\r\nfunction Movie({title,grade,date,mvCode,rankOldAndNew,rankInten}){\r\n    console.log(title);\r\n    return (\r\n        <div className=\"movie\">\r\n            <MoviesPoster movieTitle={title} rankInten={rankInten} rankOldAndNew={rankOldAndNew} date={date} mvCode={mvCode} movieGrage={grade} />\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nfunction HeaderNav({movieboxofficeDate})  {\r\n\r\n        return(\r\n\r\n            <header>\r\n                <h1>Movie 박스오피스<span>{movieboxofficeDate.slice(0,8)}</span></h1>\r\n            </header>\r\n    \r\n        );\r\n    \r\n}\r\n\r\nexport default HeaderNav;","import React, { Component } from 'react';\nimport './App.css';\nimport Movie from \"./Movie\";\nimport axios from \"axios\";\nimport HeaderNav from \"./headerNav\";\n\nclass App extends Component {\n\n   \n    state = {\n      isLoding : true,\n      movies:[],\n      date:''\n    }\n  \n\n  getMovies = async () => {\n\n      const key=\"88e5912e2bfb079238ca7936c0322922\";\n     \n      let item =[];\n      let mvDate='';\n\n      //일별 박스오피스 날짜 계산 어제날짜로\n      let today = new Date();\n      let yesterday = new Date(today.setDate(today.getDate() - 1));\n      yesterday=String(yesterday.toISOString().substring(0, 10));\n      yesterday=yesterday.replace(/-/gi,\"\");\n      console.log(yesterday);\n\n      const targetDt=yesterday;\n\n      //일별 박스오피스 api 영화 리스트 정보 구해오기\n      await axios.get(\"https://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json\",{\n            params: {\n                          key: key,\n                          targetDt:targetDt\n                    }\n                  }).then(function(response) {\n                      item = response.data.boxOfficeResult.dailyBoxOfficeList;\n                      console.log(item);\n                      mvDate =response.data.boxOfficeResult.showRange;\n                      \n                       \n                    }).catch(function(error) {\n                      console.log(error);\n                    });\n  \n                    this.setState({\n                      movies:item,\n                      isLoding:false,\n                      date:mvDate\n                    });\n   \n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    \n    const { isLoding, movies,date } = this.state;\n    return(\n        <div className=\"container\">\n            <HeaderNav movieboxofficeDate={date}></HeaderNav>\n            { isLoding ? (<div className=\"loader\">\n                          <span className=\"loader_text\">Loading.....</span>\n                        </div>\n                    ) : ( \n                      <div className=\"movies\">\n                          {movies.map(movieList => (\n                              <Movie\tkey={movieList.rank} rankInten={movieList.rankInten} rankOldAndNew={movieList.rankOldAndNew} date={movieList.openDt} mvCode={movieList.movieCd} title={movieList.movieNm} grade={movieList.rank} />\n                          ))}\n                      </div>  \n                        \n            )}\n            \n         \n         \n        </div>\n\n    );//end of return\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('wrap')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}